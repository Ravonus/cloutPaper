/**
 * @author Chad Koslovsky <chad@technomnancy.it>
 * @file Description
 * @desc Created on 2021-06-26 10:46:56 pm
 * @copyright TechnomancyIT
 */
import { BrowserWindow, screen, ipcMain } from 'electron';
import path from 'path';
import wallpaper from 'electron-wallpaper-napi';
import globalKeys from 'iohook';
import keycode from 'keycode';
//Configuration is auto generated by YML script inside craco.config.js

interface WallpaperProps {}

let url = 'http://html5wallpaper.com/wp-depo/264/';

function capitalizeFirstLetter(string: string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
}

export default () => {
  let mainWindow: null | BrowserWindow = new BrowserWindow({
    webPreferences: {
      nodeIntegrationInSubFrames: true,
      webviewTag: true,

      nodeIntegration: true,
      enableRemoteModule: true,
      contextIsolation: false,
      webSecurity: false,
    },
    fullscreen: true,
    type: 'desktop',
    transparent: true,
    frame: false,
  });

  const cdir = path.join(__dirname, '../renderer/', 'child/');

  // setTimeout(() => {
  //   child?.loadURL(`file://${cdir}index.html`);
  // }, 20000);

  // let child = new BrowserWindow({
  //   type: 'desktop',
  //   transparent: true,
  //   frame: false,
  //   fullscreen: true,
  //   webPreferences: {
  //     nodeIntegrationInSubFrames: true,
  //     webviewTag: true,
  //     nodeIntegration: true,
  //     enableRemoteModule: true,
  //     contextIsolation: false,
  //     webSecurity: false,
  //   },
  // });

  // child.show();

  //mainWindow.setIgnoreMouseEvents(true);

  //mainWindow.webContents.openDevTools();

  ipcMain.on('wpClick', (e, css) => {});

  const dir = path.join(__dirname, '../renderer/', 'wallpaper/');

  mainWindow.setKiosk(true);

  mainWindow.webContents.openDevTools();

  // ipcMain.handle('windows', async () => {
  //   console.log('LOGs');
  //   const result = mainWindow;
  //   console.log('WINDW', result);
  //   return result;
  // });

  ipcMain.handle('setWallpaper', (event, newUrl) => {
    mainWindow?.loadURL(`file://${__dirname}/index.html?url=${newUrl}`);

    return true;
  });

  mainWindow.webContents.on('did-navigate', () => {
    setTimeout(() => {
      wallpaper.attachWindow(mainWindow);
    }, 100);
  });

  mainWindow?.loadURL(`file://${__dirname}/index.html?url=${url}`);

  globalKeys.on('mousemove', (event: any) => {
    mainWindow?.webContents.send('mousemove', screen.getCursorScreenPoint());
  });

  globalKeys.on('mousedrag', (event: any) => {
    mainWindow?.webContents.send('mousemove', screen.getCursorScreenPoint());
  });

  globalKeys.on('mouseup', (event: any) => {
    if (event.button === 1)
      mainWindow?.webContents.send('mouseup', screen.getCursorScreenPoint());
  });

  globalKeys.on('mousedown', (event: any) => {
    if (event.button === 1)
      mainWindow?.webContents.send('mousedown', screen.getCursorScreenPoint());
  });

  // globalKeys.on('keyup', (event: any) => {
  //   console.log(event);
  //   // mainWindow?.webContents.sendInputEvent({
  //   //   type: 'keyUp',
  //   //   keyCode: event.keycode,
  //   // });

  //   mainWindow?.webContents.send('keyup', event);
  // });

  globalKeys.on('keydown', (event: any) => {
    console.log(event);

    try {
      console.log(keycode(event.rawcode).length);
      let key =
        keycode(event.rawcode).length > 1
          ? capitalizeFirstLetter(keycode(event.rawcode))
          : keycode(event.rawcode);

      if (key === 'Space') key = ' ';

      mainWindow?.webContents.send('keydown', key);
    } catch (e) {
      console.log(e);
    }

    // mainWindow?.webContents.sendInputEvent({
    //   type: 'keyDown',
    //   keyCode: event.keycode,
    // });
  });

  //Register and start hook
  globalKeys.start(false);

  // setTimeout(() => {
  //   wallpaper.attachWindow(mainWindow);
  // }, 5000);
  //wallpaper.attachWindow(mainWindow);
  // mainWindow?.loadURL(`file://${dir}index.html`);
};
